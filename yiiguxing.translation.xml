<application>
  <component name="AppStorage">
    <histories>
      <item value="next Transfer Amount" />
      <item value="sink" />
      <item value="closed by writer, return EOF" />
      <item value="might be a writer waiting" />
      <item value="serial Persistent Fields" />
      <item value="get URL Stream Handler" />
      <item value="Throws a &lt;code&gt;SecurityException&lt;code&gt; if the calling thread is not allowed to set the socket factory used by &lt;code&gt;ServerSocket&lt;code&gt; or &lt;code&gt;Socket&lt;code&gt;, or the stream handler factory used by &lt;code&gt;URL&lt;code&gt;. &lt;p&gt; This method calls &lt;code&gt;checkPermission&lt;code&gt; with the &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;code&gt; permission. &lt;p&gt; If you override this method, then you should make a call to &lt;code&gt;super.checkSetFactory&lt;code&gt; at the point the overridden method would normally throw an exception. &lt;p&gt;" />
      <item value="check Set Factory" />
      <item value="Content Handler" />
      <item value="authority" />
      <item value="protocol" />
      <item value="Url Deserialized State" />
      <item value="BUILTIN HANDLERS PREFIX" />
      <item value="URL" />
      <item value="Stream Tokenizer" />
      <item value="James Gosling" />
      <item value="REMIND: identification of the read and write sides needs to be more sophisticated. Either using thread groups (but what about pipes within a thread?) or using finalization (but it may be a long time until the next GC)." />
      <item value="write Side" />
      <item value="await Space" />
      <item value="Receives a byte of data. This method will block if no input is available. @param b the byte being received @exception IOException If the pipe is &lt;a href=&quot;BROKEN&quot;&gt; &lt;code&gt;broken&lt;code&gt;&lt;a&gt;, {@link connect(java.io.PipedOutputStream) unconnected}, closed, or if an IO error occurs." />
      <item value="receive" />
      <item value="snk" />
      <item value="Output Stream Reader" />
      <item value="Ring bell" />
      <item value="987072248" />
      <item value="Greenhouse Controls" />
      <item value="Write to a different stream:" />
      <item value="s &amp; i initialized only in non-default" />
      <item value="no valid constructor" />
      <item value="new Invalid Class Exception" />
      <item value="OOPS! Throws an exception:" />
      <item value="Externalizable" />
      <item value="process Queue" />
      <item value="extended Debug Info" />
      <item value="remaining cases" />
      <item value="Entry Future" />
      <item value="EMIND: skip this check for stringsarrays?" />
      <item value="check for replacement object" />
      <item value="Freeze Alien" />
      <item value="Thaw Alien" />
      <item value="Try to recover a serialized file without the class of object that's stored in that file." />
      <item value="Create a serialized output file" />
      <item value="Alien" />
      <item value="data" />
      <item value="block" />
      <item value="mode" />
      <item value="false" />
      <item value="blkmode" />
      <item value="pos" />
      <item value="Output Stream" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="148" />
        <entry key="ENGLISH" value="149" />
        <entry key="HMONG" value="1" />
        <entry key="UZBEK" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656938663615" />
  </component>
</application>
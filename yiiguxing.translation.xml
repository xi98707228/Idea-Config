<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="run If Async Not Complete" />
      <item value="Handler Result Subscriber" />
      <item value="Coyote Input Stream" />
      <item value="Servlet Http Handler Adapter" />
      <item value="deprecation" />
      <item value="Facade class that wraps a Coyote request object. All methods are delegated to the wrapped request." />
      <item value="Request Facade" />
      <item value="rawtypes" />
      <item value="Suppress Warnings" />
      <item value="就是为了让原本不兼容的接口变成" />
      <item value="987072248" />
      <item value="Enumeration Iterator Adapter" />
      <item value="enumeration" />
      <item value="Iterable" />
      <item value="需要将旧版本中的枚举器" />
      <item value="迭代器方法" />
      <item value="和老版本的" />
      <item value="进行适配" />
      <item value="elements" />
      <item value="Completion Stage" />
      <item value="Exception thrown when an error or other exception is encountered in the course of completing a result or task." />
      <item value="Completion Exception" />
      <item value="Parameterized Type Reference" />
      <item value="The purpose of this class is to enable capturing and passing a generic {@link Type}. In order to capture the generic type and retain it at runtime, you need to create a subclass (ideally as anonymous inline class) as follows:" />
      <item value="parameterized" />
      <item value="p&gt;The resulting {@code typeRef} instance can then be used to obtain a {@link Type} instance that carries the captured parameterized type information at runtime. For more information on &quot;super type tokens&quot; see the link to Neal Gafter's blog post." />
      <item value="Neal Gafter" />
      <item value="Mark Reinhold" />
      <item value="Joshua Bloch" />
      <item value="TYPE USE" />
      <item value="TYPE PARAMETER" />
      <item value="The characteristics of Spliterators that traverse and split elements maintained in Buffers." />
      <item value="SPLITERATOR CHARACTERISTICS" />
      <item value="lo Tail" />
      <item value="hi Tail" />
      <item value="结论: 1. 适配器模式 就是为了让原本不兼容的接口变成 可兼容的 ， 这样可以让原来的 耦合的双方因中间加了个适配器而解耦 ， 适配代码都在适配器里边 2. 对象适配器 - 和类适配器 - (组合)对象适配器就是我们常用的 将不兼容的接口或者抽象 变为可兼容新系统的方式 - (继承)类适配器就是 通过 将适配器同时继承 A 和 B 让其拥有同时适配这两种行为的方式 (但Java不支持多继承)" />
      <item value="适配器" />
      <item value="外观模式" />
      <item value="适配器 和" />
      <item value="变为可兼容新系统的方式" />
      <item value="将适配器同时继承" />
      <item value="data Value Iterator" />
      <item value="values" />
      <item value="拼接批量插入参数" />
      <item value="data Lists" />
      <item value="添加数据的sql" />
      <item value="data List" />
      <item value="tab fields" />
      <item value="subscribable" />
      <item value="Hibernate" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="6320" />
        <entry key="ENGLISH" value="6321" />
        <entry key="ALBANIAN" value="3" />
        <entry key="ARABIC" value="3" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="3" />
        <entry key="AFRIKAANS" value="3" />
        <entry key="DANISH" value="17" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="HAITIAN_CREOLE" value="2" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="2" />
        <entry key="LATIN" value="18" />
        <entry key="LATVIAN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="4" />
        <entry key="ROMANIAN" value="5" />
        <entry key="MALAGASY" value="4" />
        <entry key="MALTESE" value="4" />
        <entry key="MARATHI" value="1" />
        <entry key="MAORI" value="1" />
        <entry key="HMONG" value="2" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="4" />
        <entry key="PORTUGUESE" value="11" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="1" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="WELSH" value="2" />
        <entry key="UZBEK" value="2" />
        <entry key="SPANISH" value="12" />
        <entry key="HAWAIIAN" value="2" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="10" />
        <entry key="HINDI" value="12" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="1" />
        <entry key="YORUBA" value="1" />
        <entry key="VIETNAMESE" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663234071789" />
  </component>
</application>
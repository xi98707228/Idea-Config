<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="page Num" />
      <item value="start Row" />
      <item value="page Size" />
      <item value="params" />
      <item value="query For Object" />
      <item value="interface Address" />
      <item value="execute Oracle Log Sql" />
      <item value="execute" />
      <item value="sql" />
      <item value="end Row" />
      <item value="original Sql" />
      <item value="build Split Page Sql" />
      <item value="get Single Column Row Mapper" />
      <item value="reference Type" />
      <item value="execute Sqls" />
      <item value="Remote Interface Log" />
      <item value="Disables the current thread for thread scheduling purposes unless the permit is available. &lt;p&gt;If the permit is available then it is consumed and the call returns immediately; otherwise the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happens: &lt;ul&gt; &lt;li&gt;Some other thread invokes {@link unpark unpark} with the current thread as the target; or &lt;li&gt;Some other thread {@linkplain Threadinterrupt interrupts} the current thread; or &lt;li&gt;The call spuriously (that is, for no reason) returns. &lt;ul&gt; &lt;p&gt;This method does &lt;em&gt;not&lt;em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread upon return." />
      <item value="s InterruptedException if any thread interrupted the current thread before or while the current thread was waiting for a notification. The &lt;i&gt;interrupted status&lt;i&gt; of the current thread is cleared when this exception is thrown." />
      <item value="s InterruptedException if any thread has interrupted the current thread. The &lt;i&gt;interrupted status&lt;i&gt; of the current thread is cleared when this exception is thrown." />
      <item value="int i = 0;" />
      <item value="current Thread" />
      <item value="if any thread has interrupted the current thread. The &lt;i&gt;interrupted status&lt;i&gt; of the current thread is cleared when this exception is thrown." />
      <item value="sleep" />
      <item value="print Stack Trace" />
      <item value="hrows InterruptedException if any thread has interrupted the current thread. The &lt;i&gt;interrupted status&lt;i&gt; of the current thread is cleared when this exception is thrown." />
      <item value="nterruptedException if any thread has interrupted the current thread. The &lt;i&gt;interrupted status&lt;i&gt; of the current thread is cleared when this exception is thrown." />
      <item value="interrupted" />
      <item value="println" />
      <item value="System" />
      <item value="Thread" />
      <item value="interrupt" />
      <item value="Tests whether the current thread has been interrupted. The &lt;i&gt;interrupted status&lt;i&gt; of the thread is cleared by this method. In other words, if this method were to be called twice in succession, the second call would return false (unless the current thread were interrupted again, after the first call had cleared its interrupted status and before the second call had examined it). &lt;p&gt;A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false. @return &lt;code&gt;true&lt;code&gt; if the current thread has been interrupted; &lt;code&gt;false&lt;code&gt; otherwise. @see isInterrupted() @revised 6.0" />
      <item value="Tests whether this thread has been interrupted. The &lt;i&gt;interrupted status&lt;i&gt; of the thread is unaffected by this method. &lt;p&gt;A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false. @return &lt;code&gt;true&lt;code&gt; if this thread has been interrupted; &lt;code&gt;false&lt;code&gt; otherwise. @see interrupted() @revised 6.0" />
      <item value="start" />
      <item value="is Interrupted" />
      <item value="Tests if some Thread has been interrupted. The interrupted state is reset or not based on the value of ClearInterrupted that is passed." />
      <item value="Tests whether this thread has been interrupted. The &lt;i&gt;interrupted status&lt;i&gt; of the thread is unaffected by this method. &lt;p&gt;A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false. @return &lt;code&gt;true&lt;code&gt; if this thread has been interrupted; &lt;code&gt;false&lt;code&gt; otherwise. @see interrupted()" />
      <item value="suport" />
      <item value="Lock Sport Part Test" />
      <item value="Execute Sql" />
      <item value="name" />
      <item value="CENTER COLLECT SOURCE" />
      <item value="Api Execute Sql Controller" />
      <item value="execute Oracle Sql" />
      <item value="public" />
      <item value="Driver Manager Data Source" />
      <item value="DATA SOURCE ORACLE" />
      <item value="Data Base" />
      <item value="extends" />
      <item value="Oracle Data Base" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="3438" />
        <entry key="ENGLISH" value="3438" />
        <entry key="ALBANIAN" value="3" />
        <entry key="ARABIC" value="3" />
        <entry key="IRISH" value="1" />
        <entry key="ICELANDIC" value="3" />
        <entry key="AFRIKAANS" value="2" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="2" />
        <entry key="HAITIAN_CREOLE" value="2" />
        <entry key="DUTCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATIN" value="9" />
        <entry key="LATVIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="2" />
        <entry key="ROMANIAN" value="5" />
        <entry key="MALAGASY" value="1" />
        <entry key="MALTESE" value="2" />
        <entry key="MAORI" value="1" />
        <entry key="HMONG" value="1" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="5" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="WELSH" value="2" />
        <entry key="UZBEK" value="2" />
        <entry key="SPANISH" value="6" />
        <entry key="HAWAIIAN" value="2" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="6" />
        <entry key="HINDI" value="4" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="1" />
        <entry key="YORUBA" value="1" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1659860808522" />
  </component>
</application>
<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="594" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Feature" />
      <item value="error" />
      <item value="select List COUNT" />
      <item value="field Name" />
      <item value="field Type Is Date" />
      <item value="row Id" />
      <item value="是否是必须值的字段" />
      <item value="日期类型是必须填写的字段" />
      <item value="remakes" />
      <item value="is Required" />
      <item value="param Index" />
      <item value="Config Expression Node" />
      <item value="为当前表达式配置的查询参数" />
      <item value="report Id" />
      <item value="接收前端传递的查询原子参数" />
      <item value="执行字段片段" />
      <item value="表达式" />
      <item value="Primary" />
      <item value="executor Sql" />
      <item value="Simple Chart Query Executor" />
      <item value="build Executor Sql" />
      <item value="set Socket Address" />
      <item value="Caller Sensitive" />
      <item value="Security Manager" />
      <item value="Josh Bloch" />
      <item value="Stack Trace Element" />
      <item value="@param obj the object on which to test lock ownership @throws NullPointerException if obj is &lt;tt&gt;null&lt;tt&gt; @return &lt;tt&gt;true&lt;tt&gt; if the current thread holds the monitor lock on the specified object. @since 1.4" />
      <item value="Returns &lt;tt&gt;true&lt;tt&gt; if and only if the current thread holds the monitor lock on the specified object. &lt;p&gt;This method is designed to allow a program to assert that the current thread already holds a specified lock: &lt;pre&gt; assert Thread.holdsLock(obj); &lt;pre&gt; @param obj the object on which to test lock ownership @throws NullPointerException if obj is &lt;tt&gt;null&lt;tt&gt; @return &lt;tt&gt;true&lt;tt&gt; if the current thread holds the monitor lock on the specified object." />
      <item value="holds Lock" />
      <item value="This class represents a Socket Address with no protocol attachment. As an abstract class, it is meant to be subclassed with a specific, protocol dependent, implementation. &lt;p&gt; It provides an immutable object used by sockets for binding, connecting, or as returned values." />
      <item value="Inet Socket Address" />
      <item value="his class represents a socket for sending and receiving datagram packets. &lt;p&gt;A datagram socket is the sending or receiving point for a packet delivery service. Each packet sent or received on a datagram socket is individually addressed and routed. Multiple packets sent from one machine to another may be routed differently, and may arrive in any order. &lt;p&gt; Where possible, a newly constructed {@code DatagramSocket} has the {@link SocketOptionsSO_BROADCAST SO_BROADCAST} socket option enabled so as to allow the transmission of broadcast datagrams. In order to receive broadcast packets a DatagramSocket should be bound to the wildcard address. In some implementations, broadcast packets may also be received when a DatagramSocket is bound to a more specific address. &lt;p&gt; Example: {@code DatagramSocket s = new DatagramSocket(null); s.bind(new InetSocketAddress(8888)); } Which is equivalent to: {@code DatagramSocket s = new DatagramSocket(8888); } Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888. @author Pavani Diwanji @see java.net.DatagramPacket @see java.nio.channels.DatagramChannel @since JDK1.0" />
      <item value="A read-only HeapDoubleBuffer. This class extends the corresponding readwrite class, overriding the mutation methods to throw a {@link ReadOnlyBufferException} and overriding the view-buffer methods to return an instance of this class rather than of the superclass." />
      <item value="Internal state: keySet, may be empty but is never null, typ. a tiny array boolean isRegistered, protected by key set regLock, lock object to prevent duplicate registrations boolean isBlocking, protected by regLock" />
      <item value="Selectable Channel" />
      <item value="Abstract Selectable Channel" />
      <item value="Byte Channel" />
      <item value="Scattering Byte Channel" />
      <item value="Gathering Byte Channel" />
      <item value="Datagram Socket" />
      <item value="argument" />
      <item value="Datagram Packet" />
      <item value="Standard RTSP header names and values." />
      <item value="Rtsp Headers" />
      <item value="Expression Atomic Part" />
      <item value="否则不能获取实时的计算结果" />
      <item value="Java default is 16, probably too small" />
      <item value="STRING BUILDER SIZE" />
      <item value="success" />
      <item value="already" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="5698" />
        <entry key="ENGLISH" value="5699" />
        <entry key="ALBANIAN" value="4" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="4" />
        <entry key="POLISH" value="1" />
        <entry key="AFRIKAANS" value="8" />
        <entry key="DANISH" value="10" />
        <entry key="GERMAN" value="13" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="8" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="6" />
        <entry key="FRISIAN" value="3" />
        <entry key="HAITIAN_CREOLE" value="6" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="7" />
        <entry key="CATALAN" value="1" />
        <entry key="KURDISH" value="4" />
        <entry key="LATIN" value="10" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="HMONG" value="4" />
        <entry key="NORWEGIAN" value="7" />
        <entry key="PORTUGUESE" value="9" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="6" />
        <entry key="SAMOAN" value="5" />
        <entry key="SESOTHO" value="2" />
        <entry key="SLOVAK" value="5" />
        <entry key="SLOVENIAN" value="3" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="GREEK" value="7" />
        <entry key="ITALIAN" value="7" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="5" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="7" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1654478029731" />
  </component>
  <component name="Settings">
    <option name="showReplacementActionInContextMenu" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>
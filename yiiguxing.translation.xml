<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="pjws Data Collect Service" />
      <item value="tick" />
      <item value="query" />
      <item value="life Cycle" />
      <item value="success" />
      <item value="String" />
      <item value="query View Tick Life Cycle" />
      <item value="987072248" />
      <item value="文单主键Id" />
      <item value="tick Id" />
      <item value="Get Mapping" />
      <item value="query Tick Life Cycle" />
      <item value="get Effective Session Tracking Modes" />
      <item value="Session Tracking Mode" />
      <item value="Protocol Handler" />
      <item value="engine" />
      <item value="Initializing" />
      <item value="Servlet" />
      <item value="Database Error" />
      <item value="throw Sql Exception" />
      <item value="Pooling Data Source" />
      <item value="rollback" />
      <item value="rollback And Reset Auto Commit" />
      <item value="transaction" />
      <item value="driver" />
      <item value="鍏抽棴鐨勮繛鎺" />
      <item value="作废" />
      <item value="发放" />
      <item value="TRACE" />
      <item value="The synchronization state." />
      <item value="Count Down Latch" />
      <item value="patro Pointsl Service" />
      <item value="do Create Bean" />
      <item value="A synchronizer that may be exclusively owned by a thread. This class provides a basis for creating locks and related synchronizers that may entail a notion of ownership. The {@code AbstractOwnableSynchronizer} class itself does not manage or use this information. However, subclasses and tools may use appropriately maintained values to help control and monitor access and provide diagnostics." />
      <item value="The current owner of exclusive mode synchronization." />
      <item value="Sets the thread that currently owns exclusive access. A {@code null} argument indicates that no thread owns access. This method does not otherwise impose any synchronization or {@code volatile} field accesses. @param thread the owner thread" />
      <item value="Returns the thread last set by {@code setExclusiveOwnerThread}, or {@code null} if never set. This method does not otherwise impose any synchronization or {@code volatile} field accesses. @return the owner thread" />
      <item value="updaters" />
      <item value="Setup to support compareAndSet. We need to natively implement this here: For the sake of permitting future enhancements, we cannot explicitly subclass AtomicInteger, which would be efficient and useful otherwise. So, as the lesser of evils, we natively implement using hotspot intrinsics API. And while we are at it, we do the same for other CASable fields (which could otherwise be done with atomic field updaters)." />
      <item value="CA Sable" />
      <item value="next Offset" />
      <item value="Returns a collection containing threads that may be waiting to acquire in exclusive mode. This has the same properties as {@link getQueuedThreads} except that it only returns those threads waiting due to an exclusive acquire." />
      <item value="The current owner of exclusive mode synchronization" />
      <item value="exclusive Owner Thread" />
      <item value="Abstract Ownable Synchronizer" />
      <item value="Used by Condition" />
      <item value="Used by addWaiter" />
      <item value="EXCLUSIVE" />
      <item value="acquire Queued" />
      <item value="try Acquire" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="773" />
        <entry key="ENGLISH" value="774" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="DANISH" value="3" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="4" />
        <entry key="FRISIAN" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="LATIN" value="3" />
        <entry key="ROMANIAN" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SAMOAN" value="2" />
        <entry key="SLOVAK" value="4" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1645405761482" />
  </component>
  <component name="Settings">
    <option name="showReplacementActionInContextMenu" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>
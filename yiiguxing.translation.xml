<application>
  <component name="AppStorage">
    <histories>
      <item value="Product Custom Contract Relationship" />
      <item value="row Id" />
      <item value="primitive" />
      <item value="representing" />
      <item value="Class" />
      <item value="value" />
      <item value="minimum" />
      <item value="MIN VALUE" />
      <item value="0 x 80000000" />
      <item value="0 x 7 fffffff" />
      <item value="indicated Amount" />
      <item value="amount Collected" />
      <item value="contract Server Name" />
      <item value="custom Show File Name" />
      <item value="get Bytes" />
      <item value="span" />
      <item value="select Config List" />
      <item value="avatar" />
      <item value="select All V User" />
      <item value="get System Core Users" />
      <item value="I Sys Role Service" />
      <item value="logistics Number" />
      <item value="logistics Company" />
      <item value="source Order Id" />
      <item value="leader User Nick" />
      <item value="leader User Name" />
      <item value="remakes" />
      <item value="contract Number" />
      <item value="sequence Number" />
      <item value="invoice Number" />
      <item value="Json Format" />
      <item value="leader User" />
      <item value="物流公司" />
      <item value="try Handle Pending" />
      <item value="Treated specially by GC" />
      <item value="A Reference instance is in one of four possible internal states: Active: Subject to special treatment by the garbage collector. Some time after the collector detects that the reachability of the referent has changed to the appropriate state, it changes the instance's state to either Pending or Inactive, depending upon whether or not the instance was registered with a queue when it was created. In the former case it also adds the instance to the pending-Reference list. Newly-created instances are Active. Pending: An element of the pending-Reference list, waiting to be enqueued by the Reference-handler thread. Unregistered instances are never in this state. Enqueued: An element of the queue with which the instance was registered when it was created. When an instance is removed from its ReferenceQueue, it is made Inactive. Unregistered instances are never in this state. Inactive: Nothing more to do. Once an instance becomes Inactive its state will never change again. The state is encoded in the queue and next fields as follows: Active: queue = ReferenceQueue with which instance is registered, or ReferenceQueue.NULL if it was not registered with a queue; next = null. Pending: queue = ReferenceQueue with which instance is registered; next = this Enqueued: queue = ReferenceQueue.ENQUEUED; next = Following instance in queue, or this if at end of list. Inactive: queue = ReferenceQueue.NULL; next = this. With this scheme the collector need only examine the next field in order to determine whether a Reference instance requires special treatment: If the next field is null then the instance is active; if it is non-null, then the collector should treat the instance normally. To ensure that a concurrent collector can discover active Reference objects without interfering with application threads that may apply the enqueue() method to those objects, collectors should link discovered objects through the discovered field. The discovered field is also used for linking Reference objects in the pending list." />
      <item value="Soft Reference" />
      <item value="String Coding" />
      <item value="Historically Named Charset" />
      <item value="is System Domain Loader" />
      <item value="misc" />
      <item value="do Privileged" />
      <item value="cs" />
      <item value="bug Level" />
      <item value="Privileged Exception Action" />
      <item value="Access Controller" />
      <item value="select List COUNT" />
      <item value="Resource Bundle" />
      <item value="String Manager" />
      <item value="select Dict Data By Type" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="216" />
        <entry key="ENGLISH" value="217" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="HMONG" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1655556977798" />
  </component>
</application>
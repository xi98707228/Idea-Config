<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="594" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Expression Atomic Part" />
      <item value="joran" />
      <item value="单独进行计算" />
      <item value="the" />
      <item value="nacos" />
      <item value="Ignore" />
      <item value="field Name" />
      <item value="field Type Is Date" />
      <item value="condition Param Array" />
      <item value="config Condition Param" />
      <item value="get Id Str" />
      <item value="set Make Time" />
      <item value="config Expression Node Service" />
      <item value="json Object" />
      <item value="Doug Lea" />
      <item value="@author Doug Lea ({@code ConcurrentHashMap})" />
      <item value="Closes any resources that are held by the client. &lt;p&gt; Note that (as described in Doug Lea's discussion about interrupting IO operations in &quot;Concurrent Programming in Java&quot; (Addison-Wesley Professional, 2nd edition, 1999) this method is used to interrupt any blocked IO operation in the client when the server is shutting down. The client implementation must anticipate this potential, and gracefully exit when the blocked IO operation throws the relevant {@link IOException} subclass. &lt;p&gt; Note also, that unlike {@link Closeableclose()} this method is not permitted to propagate any {@link IOException} that occurs when closing the underlying resource(s)." />
      <item value="Note that (as described in Doug Lea's discussion about interrupting IO" />
      <item value="Scott Violet" />
      <item value="Amy Fowler" />
      <item value="Jeff Dinkins" />
      <item value="A human readable description of the file. For example, a file named &lt;i&gt;jag.jpg&lt;i&gt; might have a description that read: &quot;A JPEG image file of James Gosling's face&quot;." />
      <item value="unascribed" />
      <item value="Feature" />
      <item value="error" />
      <item value="select List COUNT" />
      <item value="row Id" />
      <item value="是否是必须值的字段" />
      <item value="日期类型是必须填写的字段" />
      <item value="remakes" />
      <item value="is Required" />
      <item value="param Index" />
      <item value="Config Expression Node" />
      <item value="为当前表达式配置的查询参数" />
      <item value="report Id" />
      <item value="接收前端传递的查询原子参数" />
      <item value="执行字段片段" />
      <item value="表达式" />
      <item value="Primary" />
      <item value="executor Sql" />
      <item value="Simple Chart Query Executor" />
      <item value="build Executor Sql" />
      <item value="set Socket Address" />
      <item value="Caller Sensitive" />
      <item value="Security Manager" />
      <item value="Josh Bloch" />
      <item value="Stack Trace Element" />
      <item value="@param obj the object on which to test lock ownership @throws NullPointerException if obj is &lt;tt&gt;null&lt;tt&gt; @return &lt;tt&gt;true&lt;tt&gt; if the current thread holds the monitor lock on the specified object. @since 1.4" />
      <item value="Returns &lt;tt&gt;true&lt;tt&gt; if and only if the current thread holds the monitor lock on the specified object. &lt;p&gt;This method is designed to allow a program to assert that the current thread already holds a specified lock: &lt;pre&gt; assert Thread.holdsLock(obj); &lt;pre&gt; @param obj the object on which to test lock ownership @throws NullPointerException if obj is &lt;tt&gt;null&lt;tt&gt; @return &lt;tt&gt;true&lt;tt&gt; if the current thread holds the monitor lock on the specified object." />
      <item value="holds Lock" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="5724" />
        <entry key="ENGLISH" value="5725" />
        <entry key="ALBANIAN" value="4" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="4" />
        <entry key="POLISH" value="1" />
        <entry key="AFRIKAANS" value="8" />
        <entry key="DANISH" value="10" />
        <entry key="GERMAN" value="13" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="8" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="6" />
        <entry key="FRISIAN" value="3" />
        <entry key="HAITIAN_CREOLE" value="6" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="7" />
        <entry key="CATALAN" value="1" />
        <entry key="KURDISH" value="4" />
        <entry key="LATIN" value="10" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="HMONG" value="4" />
        <entry key="NORWEGIAN" value="7" />
        <entry key="PORTUGUESE" value="9" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="6" />
        <entry key="SAMOAN" value="5" />
        <entry key="SESOTHO" value="2" />
        <entry key="SLOVAK" value="5" />
        <entry key="SLOVENIAN" value="3" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="GREEK" value="7" />
        <entry key="ITALIAN" value="7" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="5" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="7" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1654478029731" />
  </component>
  <component name="Settings">
    <option name="showReplacementActionInContextMenu" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>
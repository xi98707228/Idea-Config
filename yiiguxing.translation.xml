<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="594" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <histories>
      <item value="Init Translate Data Map" />
      <item value="Inject Data Mapper" />
      <item value="Rossen Stoyanchev" />
      <item value="Juergen Hoeller" />
      <item value="Mock Part" />
      <item value="Test Process Engine" />
      <item value="check Current Process Is End" />
      <item value="A component required a bean of type 'com.ruoyi.project.process.utils.process.StatusProcessEngine' that could not be found." />
      <item value="determine Annotation Type" />
      <item value="get Declared Annotation" />
      <item value="has Plain Java Annotations Only" />
      <item value="Exhaustive retrieval of merged annotations..." />
      <item value="Shortcut: directly present on the element, with no merging needed?" />
      <item value="PLAIN" />
      <item value="Find a single {@link Annotation} of {@code annotationType} on the supplied {@link Method}, traversing its super methods (i.e. from superclasses and interfaces) if the annotation is not &lt;em&gt;directly present&lt;em&gt; on the given method itself. &lt;p&gt;Correctly handles bridge {@link Method Methods} generated by the compiler. &lt;p&gt;Meta-annotations will be searched if the annotation is not &lt;em&gt;directly present&lt;em&gt; on the method. &lt;p&gt;Annotations on methods are not inherited by default, so we need to handle this explicitly. @param method the method to look for annotations on @param annotationType the annotation type to look for @return the first matching annotation, or {@code null} if not found @see getAnnotation(Method, Class)" />
      <item value="find Aspect J Annotation On Method" />
      <item value="stack Around Closure" />
      <item value="get Caller Class" />
      <item value="Alexandre Vasseur" />
      <item value="Method Accessor" />
      <item value="Modifier" />
      <item value="Bits not (yet) exposed in the public API either because they have different meanings for fields and methods and there is no way to distinguish between the two in this class, or because they are not Java programming language keywords" />
      <item value="is Bridge" />
      <item value="bridge Method" />
      <item value="Exclude pointcuts" />
      <item value="get Advisor Methods" />
      <item value="Type Descriptor" />
      <item value="is Instance" />
      <item value="Method" />
      <item value="Converting Comparator" />
      <item value="悲观锁" />
      <item value="乐观锁" />
      <item value="mutex" />
      <item value="reversed" />
      <item value="compared" />
      <item value="extracts" />
      <item value="implementation" />
      <item value="comparator" />
      <item value="Returns" />
      <item value="lexicographic" />
      <item value="then Comparing" />
      <item value="Note: although @After is ordered before @AfterReturning and @AfterThrowing, an @After advice method will actually be invoked after @AfterReturning and @AfterThrowing methods due to the fact that AspectJAfterAdvice.invoke(MethodInvocation) invokes proceed() in a `try` block and only invokes the @After advice method in a corresponding `finally` block." />
      <item value="aspect Cut" />
      <item value="After Returning" />
      <item value="advice" />
      <item value="Druid Abstract Data Source" />
      <item value="adapt For Attribute" />
      <item value="Merged Annotation" />
      <item value="get Process Active Def Mapping By Template Id" />
      <item value="boolean" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2168" />
        <entry key="ENGLISH" value="2169" />
        <entry key="ALBANIAN" value="2" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="2" />
        <entry key="POLISH" value="1" />
        <entry key="AFRIKAANS" value="2" />
        <entry key="DANISH" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="8" />
        <entry key="FILIPINO" value="1" />
        <entry key="FINNISH" value="5" />
        <entry key="FRISIAN" value="1" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="DUTCH" value="6" />
        <entry key="LATIN" value="4" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="HMONG" value="2" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SAMOAN" value="3" />
        <entry key="SESOTHO" value="1" />
        <entry key="SLOVAK" value="5" />
        <entry key="SLOVENIAN" value="3" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="6" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="4" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1649208835990" />
  </component>
  <component name="Settings">
    <option name="showReplacementActionInContextMenu" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>
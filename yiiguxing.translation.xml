<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Beverage" />
      <item value="get Capacity" />
      <item value="set Capacity" />
      <item value="get Description" />
      <item value="Soy" />
      <item value="House Blend" />
      <item value="Buffered Input Stream" />
      <item value="Filter Input Stream" />
      <item value="The input stream to be filtered." />
      <item value="REDEFINE FROZEN" />
      <item value="DECORATE" />
      <item value="A &lt;code&gt;FilterInputStream&lt;code&gt; contains some other input stream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality. The class &lt;code&gt;FilterInputStream&lt;code&gt; itself simply overrides all methods of &lt;code&gt;InputStream&lt;code&gt; with versions that pass all requests to the contained input stream. Subclasses of &lt;code&gt;FilterInputStream&lt;code&gt; may further override some of these methods and may also provide additional methods and fields." />
      <item value="Espresso" />
      <item value="Starbuzz Coffee" />
      <item value="Mocha" />
      <item value="beverage" />
      <item value="Decaf" />
      <item value="Condiment Decorator" />
      <item value="run State Of" />
      <item value="The queue used for holding tasks and handing off to worker threads. We do not require that workQueue.poll() returning null necessarily means that workQueue.isEmpty(), so rely solely on isEmpty to see if the queue is empty (which we must do for example when deciding whether to transition from SHUTDOWN to TIDYING). This accommodates special-purpose queues such as DelayQueues for which poll() is allowed to return null even if it may later return non-null when delays expire." />
      <item value="Set containing all worker threads in pool. Accessed only when holding mainLock." />
      <item value="add" />
      <item value="Recheck while holding lock. Back out on ThreadFactory failure or if shut down before lock acquired." />
      <item value="offer" />
      <item value="Proceed in 3 steps: 1. If fewer than corePoolSize threads are running, try to start a new thread with the given command as its first task. The call to addWorker atomically checks runState and workerCount, and so prevents false alarms that would add threads when it shouldn't, by returning false. 2. If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method. So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none. 3. If we cannot queue task, then we try to add a new thread. If it fails, we know we are shut down or saturated and so reject the task." />
      <item value="Thread this worker is running in. Null if factory fails." />
      <item value="char At" />
      <item value="存在当前字符" />
      <item value="contains Key" />
      <item value="long Bits To Double" />
      <item value="char" />
      <item value="cost" />
      <item value="Character" />
      <item value="Bow And Arrow Behavior" />
      <item value="Current Conditions Display" />
      <item value="Weather Data" />
      <item value="设计成接口" />
      <item value="为了交互对象之间的松耦合设计而努力" />
      <item value="分别封装起来" />
      <item value="Fly Behavior" />
      <item value="GROUP MAPPING ICON" />
      <item value="GROUP MAPPING PRIMARY" />
      <item value="device Data List Id" />
      <item value="execute Add Document" />
      <item value="device Primary" />
      <item value="device Icon" />
      <item value="function" />
      <item value="top Center Left num 2" />
      <item value="设备列表" />
      <item value="人工监测点" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="4572" />
        <entry key="ENGLISH" value="4573" />
        <entry key="ALBANIAN" value="3" />
        <entry key="ARABIC" value="3" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="3" />
        <entry key="AFRIKAANS" value="3" />
        <entry key="DANISH" value="4" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="HAITIAN_CREOLE" value="2" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="2" />
        <entry key="LATIN" value="15" />
        <entry key="LATVIAN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="4" />
        <entry key="ROMANIAN" value="5" />
        <entry key="MALAGASY" value="1" />
        <entry key="MALTESE" value="3" />
        <entry key="MAORI" value="1" />
        <entry key="HMONG" value="1" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="7" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="WELSH" value="2" />
        <entry key="UZBEK" value="2" />
        <entry key="SPANISH" value="7" />
        <entry key="HAWAIIAN" value="2" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="7" />
        <entry key="HINDI" value="6" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="1" />
        <entry key="YORUBA" value="1" />
        <entry key="VIETNAMESE" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1661867090426" />
  </component>
</application>
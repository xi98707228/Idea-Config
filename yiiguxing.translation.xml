<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="1000" />
    <option name="newTranslationDialogWidth" value="594" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <histories>
      <item value="REENTRANT READ WRITE LOC Ky" />
      <item value="在获取锁资源之前就已经加载到当前工作内存的所有变量" />
      <item value="synchronized" />
      <item value="expect" />
      <item value="compare And Set State" />
      <item value="compare And Swap Int" />
      <item value="application Context" />
      <item value="add All" />
      <item value="after Process" />
      <item value="limit Field" />
      <item value="字段名称分组" />
      <item value="collect Group Field Name Map" />
      <item value="TYPE DATA KEY" />
      <item value="data And Limit Group Map" />
      <item value="Display Type" />
      <item value="prepare Handle" />
      <item value="Njzjdbc Data Groups Index Record" />
      <item value="execute Calculate" />
      <item value="build Temp Director Path" />
      <item value="collect Groups File Paths" />
      <item value="table Name" />
      <item value="AIR RECEIVE FIELD NAME" />
      <item value="ERROR" />
      <item value="创建存储数据的表" />
      <item value="运行时配置" />
      <item value="target Director File" />
      <item value="Python Build Table Type" />
      <item value="find By Ids" />
      <item value="njzjdbc Data Groups Index Record Manager" />
      <item value="Neal Gafter" />
      <item value="groups Row Ids" />
      <item value="groups Ids" />
      <item value="original Table Name" />
      <item value="经过python" />
      <item value="原始表名称" />
      <item value="model Type" />
      <item value="Request Param" />
      <item value="Model" />
      <item value="String" />
      <item value="airplane Model Manager" />
      <item value="risk warning fly control" />
      <item value="scheduler" />
      <item value="tomcat" />
      <item value="Upload" />
      <item value="groups Row Id" />
      <item value="Jdbc Template" />
      <item value="Objects" />
      <item value="is Null" />
      <item value="get Store File" />
      <item value="null" />
      <item value="status Context" />
      <item value="获取手机端上报的所有关联设备Device Code" />
      <item value="i Gx Oa Work Order Service" />
      <item value="V Task" />
      <item value="get Specify Data Info" />
      <item value="outside" />
      <item value="航空数据" />
      <item value="component" />
      <item value="store This Time Request Data" />
      <item value="start Index" />
      <item value="fast Time" />
      <item value="this Time Groups Index" />
      <item value="file Internal Name" />
      <item value="Python Related File Vo" />
      <item value="lists" />
      <item value="usage" />
      <item value="display Table" />
      <item value="table name" />
      <item value="web" />
      <item value="servlet" />
      <item value="URL" />
      <item value="Mapped" />
      <item value="insert Tables" />
      <item value="custom Configuration Query Manager" />
      <item value="Intelli J" />
      <item value="then Run" />
      <item value="display Type" />
      <item value="bridge" />
      <item value="Python Data Source Config" />
      <item value="SIGNAL" />
      <item value="NORMAL" />
      <item value="below" />
      <item value="CAPACITY" />
      <item value="device Info Translate Map" />
      <item value="window Table" />
      <item value="count" />
      <item value="td" />
      <item value="new" />
      <item value="return" />
      <item value="modbus" />
      <item value="pu" />
      <item value="api" />
      <item value="request Base Url" />
      <item value="importance" />
      <item value="add" />
      <item value="SELECT" />
      <item value="collect Groups List" />
      <item value="margin" />
      <item value="skip Calculate" />
      <item value="SUBJECT FACTORY TASK TITLE" />
      <item value="组数据量" />
      <item value="记录时间" />
      <item value="groups Record Id List" />
      <item value="analytical Conversion By Groups Ids" />
      <item value="Path" />
      <item value="File" />
      <item value="Store" />
      <item value="Python" />
      <item value="runner" />
      <item value="host" />
      <item value="password" />
      <item value="redis" />
      <item value="Redis Config" />
      <item value="process" />
      <item value="risk warning air conditioner" />
      <item value="risk" />
      <item value="verify Check Value" />
      <item value="njzjdbc data groups index record" />
      <item value="Initializing Bean" />
      <item value="column Id" />
      <item value="Illegal Argument Exception" />
      <item value="dummy" />
      <item value="Bootstrap Service Registry Impl" />
      <item value="store First Groups Index Record" />
      <item value="native" />
      <item value="wait For Interruptibly" />
      <item value="Virtual Flow" />
      <item value="comparing" />
      <item value="match Primary" />
      <item value="air conditioner" />
      <item value="get Display Table" />
      <item value="Airplane Model" />
      <item value="row Id" />
      <item value="distinct" />
      <item value="select" />
      <item value="size" />
      <item value="accept" />
      <item value="completable" />
      <item value="group" />
      <item value="bjuiajax" />
      <item value="do Load" />
      <item value="no table" />
      <item value="no model" />
      <item value="Select Vo" />
      <item value="table Relation Data Container" />
      <item value="append Table Data Container" />
      <item value="html" />
      <item value="repair Scheme Val" />
      <item value="checkbox" />
      <item value="element" />
      <item value="data List" />
      <item value="show" />
      <item value="role" />
      <item value="role Name" />
      <item value="thead" />
      <item value="prototype" />
      <item value="default Jedis" />
      <item value="Jedis" />
      <item value="initialization Jedis Connection" />
      <item value="groups" />
      <item value="GET" />
      <item value="method" />
      <item value="function" />
      <item value="success" />
      <item value="数据表之后再选择数据信息" />
      <item value="table Type" />
      <item value="获取数据表关联的数据组信息" />
      <item value="Scope" />
      <item value="ajax" />
      <item value="url" />
      <item value="framework" />
      <item value="Frameworks" />
      <item value="juli" />
      <item value="quack Observable" />
      <item value="Quackable" />
      <item value="Observer" />
      <item value="即观察哪个具体的鸭子" />
      <item value="Quack Observable Impl" />
      <item value="observer List" />
      <item value="target Duck" />
      <item value="implements" />
      <item value="Quack Observable" />
      <item value="传入当前呱呱叫的对象" />
      <item value="Observable" />
      <item value="update" />
      <item value="Abstract Observer Data Board" />
      <item value="Auto Risk Warning Schedule Thread Factory" />
      <item value="Completion Stage" />
      <item value="Asynchronous Completion Task" />
      <item value="file Row Id" />
      <item value="Completable Future" />
      <item value="execute" />
      <item value="Jdbc Util" />
      <item value="get Total Count" />
      <item value="会产生线程安全问题" />
      <item value="脏读" />
      <item value="this Time Table Count" />
      <item value="import Task Thread Pool" />
      <item value="length" />
      <item value="本次保存起始索引" />
      <item value="table" />
      <item value="values" />
      <item value="delete Char At" />
      <item value="插入数据信息" />
      <item value="分组数据元数据" />
      <item value="runnable" />
      <item value="Delegated Scheduled Executor Service" />
      <item value="get Continue Existing Periodic Tasks After Shutdown Policy" />
      <item value="hook for ScheduledThreadPoolExecutor" />
      <item value="Performs any further cleanup following run state transition on invocation of shutdown. A no-op here, but used by ScheduledThreadPoolExecutor to cancel delayed tasks." />
      <item value="ensure visibility of callable" />
      <item value="表名称" />
      <item value="计划的运行单位" />
      <item value="Schedule Run Unit" />
      <item value="common Run At Fixed Rate" />
      <item value="Creates and executes a periodic action that becomes enabled first after the given initial delay, and subsequently with the given period; that is executions will commence after {@code initialDelay} then {@code initialDelay+period}, then {@code initialDelay + 2 period}, and so on. If any execution of the task encounters an exception, subsequent executions are suppressed. Otherwise, the task will only terminate via cancellation or termination of the executor. If any execution of this task takes longer than its period, then subsequent executions may start late, but will not concurrently execute. @param command the task to execute @param initialDelay the time to delay first execution @param period the period between successive executions @param unit the time unit of the initialDelay and period parameters @return a ScheduledFuture representing pending completion of the task, and whose {@code get()} method will throw an exception upon cancellation @throws RejectedExecutionException if the task cannot be scheduled for execution @throws NullPointerException if command is null @throws IllegalArgumentException if period less than or equal to zero" />
      <item value="AUTO RISK WARNING SCHEDULE THREAD POOL" />
      <item value="resolve Schedule Value To Uint" />
      <item value="store File Name" />
      <item value="Array List" />
      <item value="A {@link SortedMap} extended with navigation methods returning the closest matches for given search targets. Methods {@code lowerEntry}, {@code floorEntry}, {@code ceilingEntry}, and {@code higherEntry} return {@code Map.Entry} objects associated with keys respectively less than, less than or equal, greater than or equal, and greater than a given key, returning {@code null} if there is no such key. Similarly, methods {@code lowerKey}, {@code floorKey}, {@code ceilingKey}, and {@code higherKey} return only the associated keys. All of these methods are designed for locating, not traversing entries. &lt;p&gt;A {@code NavigableMap} may be accessed and traversed in either ascending or descending key order. The {@code descendingMap} method returns a view of the map with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. Methods {@code subMap}, {@code headMap}, and {@code tailMap} differ from the like-named {@code SortedMap} methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Submaps of any {@code NavigableMap} must implement the {@code NavigableMap} interface. &lt;p&gt;This interface additionally defines methods {@code firstEntry}, {@code pollFirstEntry}, {@code lastEntry}, and {@code pollLastEntry} that return andor remove the least and greatest mappings, if any exist, else returning {@code null}. &lt;p&gt;Implementations of entry-returning methods are expected to return {@code Map.Entry} pairs representing snapshots of mappings at the time they were produced, and thus generally do &lt;em&gt;not&lt;em&gt; support the optional {@code Entry.setValue} method. Note however that it is possible to change mappings in the associated map using method {@code put}. &lt;p&gt;Methods {@link subMap(Object, Object) subMap(K, K)}, {@link headMap(Object) headMap(K)}, and {@link tailMap(Object) tailMap(K)} are specified to return {@code SortedMap} to allow existing implementations of {@code SortedMap} to be compatibly retrofitted to implement {@code NavigableMap}, but extensions and implementations of this interface are encouraged to override these methods to return {@code NavigableMap}. Similarly, {@link keySet()} can be overriden to return {@code NavigableSet}. &lt;p&gt;This interface is a member of the &lt;a href=&quot;{@docRoot}..technotesguidescollectionsindex.html&quot;&gt; Java Collections Framework&lt;a&gt;. @author Doug Lea @author Josh Bloch @param &lt;K&gt; the type of keys maintained by this map @param &lt;V&gt; the type of mapped values @since 1.6" />
      <item value="Concurrent Navigable Map" />
      <item value="Navigable Map" />
      <item value="Concurrent Skip List Map" />
      <item value="model Name" />
      <item value="groups Index" />
      <item value="index End" />
      <item value="index Begin" />
      <item value="记录本次导入数据" />
      <item value="service" />
      <item value="auto Risk Warning" />
      <item value="EVERY TIME" />
      <item value="NUAA" />
      <item value="compare And Increment Worker Count" />
      <item value="Same as prestartCoreThread except arranges that at least one thread is started even if corePoolSize is 0." />
      <item value="worker Count Of" />
      <item value="Runnable Scheduled Future" />
      <item value="re Execute Periodic" />
      <item value="ensure Prestart" />
      <item value="注册为观察者" />
      <item value="observer" />
      <item value="finish Poll" />
      <item value="Index into delay queue, to support faster cancellation." />
      <item value="sift Up" />
      <item value="can Run In Current Run State" />
      <item value="schedule With Fixed Delay" />
      <item value="period" />
      <item value="987072248" />
      <item value="get Queue" />
      <item value="add Worker" />
      <item value="enqueue" />
      <item value="Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning {@code true} upon success and {@code false} if this queue is full. This method is generally preferable to method {@link add}, which can fail to insert an element only by throwing an exception." />
      <item value="offer" />
      <item value="Abort Policy" />
      <item value="is Periodic" />
      <item value="Null Pointer Exception" />
      <item value="Scheduled Thread Pool Executor" />
      <item value="core Pool Size" />
      <item value="EVERY DAYS" />
      <item value="delayed Time" />
      <item value="type Value" />
      <item value="每次" />
      <item value="delayed Execute" />
      <item value="Auto Risk Warning Schedule" />
      <item value="information Info" />
      <item value="Ajax Result" />
      <item value="result Ajax" />
      <item value="id" />
      <item value="get" />
      <item value="direct" />
      <item value="retrieve" />
      <item value="policy" />
      <item value="Mobile Security Policy File Controller" />
      <item value="get Logger" />
      <item value="Logger Factory" />
      <item value="logger" />
      <item value="file Manager" />
      <item value="Quack Observer" />
      <item value="notifier" />
      <item value="optimize" />
      <item value="get Singleton" />
      <item value="Factory Bean Registry Support" />
      <item value="Abstract Autowire Capable Bean Factory" />
      <item value="和未被装饰的普通鸭子" />
      <item value="Head First Design Pattern" />
      <item value="room Light" />
      <item value="button Was Pressed" />
      <item value="Destroying" />
      <item value="Mobile Auto Risk Data Controller" />
      <item value="Mobile Security Guarantees File Controller" />
      <item value="Gx Oa Security Guarantees File Manager" />
      <item value="Abstract Protocol" />
      <item value="get JSON Array" />
      <item value="go Risk List" />
      <item value="Request Mapping" />
      <item value="手动预警分析" />
      <item value="String Utils" />
      <item value="equals" />
      <item value="如果是查看" />
      <item value="获取" />
      <item value="历史预警信息" />
      <item value="data Type" />
      <item value="information" />
      <item value="risk Warning Information Manager" />
      <item value="warning Information" />
      <item value="如果是查看 获取 历史预警信息" />
      <item value="view" />
      <item value="Response Body" />
      <item value="Can't use Subversion command line client svn The path to the Subversion executable is probably wrong" />
      <item value="save Warning" />
      <item value="button" />
      <item value="for Each" />
      <item value="Airplane Model Manager" />
      <item value="获取飞机模型数据信息" />
      <item value="Hibernate Utils" />
      <item value="Free Login" />
      <item value="mobile" />
      <item value="飞机模型相关" />
      <item value="pre Handle" />
      <item value="free Login Accept" />
      <item value="Free Login Handler" />
      <item value="ztree Data" />
      <item value="200" />
      <item value="res Map" />
      <item value="Casts an object to the class or interface represented by this {@code Class} object. @param obj the object to be cast @return the object after casting, or null if obj is null @throws ClassCastException if the object is not null and is not assignable to the type T. @since 1.5" />
      <item value="Generic Declaration" />
      <item value="is Annotation Present" />
      <item value="is Annotation Inherited" />
      <item value="is Annotation Declared Locally" />
      <item value="get Declaring Class" />
      <item value="aspect Method" />
      <item value="Rest Controller" />
      <item value="session" />
      <item value="Http Session" />
      <item value="user session" />
      <item value="get Request URI" />
      <item value="get Attribute" />
      <item value="req" />
      <item value="visitor Url" />
      <item value="analysis Config" />
      <item value="Risk Assess Store Controller" />
      <item value="Application Context Aware" />
      <item value="do With Local Methods" />
      <item value="determine Candidate Constructors" />
      <item value="Instantiation Aware Bean Post Processor Adapter" />
      <item value="Autowired Annotation Bean Post Processor" />
      <item value="User Configurations" />
      <item value="Priority Ordered" />
      <item value="Configurable Listable Bean Factory" />
      <item value="Bean Factory Post Processor" />
      <item value="Indicates one or more &lt;em&gt;component classes&lt;em&gt; to import &amp;mdash; typically {@link Configuration @Configuration} classes. &lt;p&gt;Provides functionality equivalent to the {@code &lt;import&gt;} element in Spring XML. Allows for importing {@code @Configuration} classes, {@link ImportSelector} and {@link ImportBeanDefinitionRegistrar} implementations, as well as regular component classes (as of 4.2; analogous to {@link AnnotationConfigApplicationContextregister}). &lt;p&gt;{@code @Bean} definitions declared in imported {@code @Configuration} classes should be accessed by using {@link org.springframework.beans.factory.annotation.Autowired @Autowired} injection. Either the bean itself can be autowired, or the configuration class instance declaring the bean can be autowired. The latter approach allows for explicit, IDE-friendly navigation between {@code @Configuration} class methods. &lt;p&gt;May be declared at the class level or as a meta-annotation. &lt;p&gt;If XML or other non-{@code @Configuration} bean definition resources need to be imported, use the {@link ImportResource @ImportResource} annotation instead." />
      <item value="get If Available" />
      <item value="Redis Sentinel Configuration" />
      <item value="Redis Cluster Configuration" />
      <item value="Sentinel" />
      <item value="Cluster" />
      <item value="redis Application Context" />
      <item value="redis Connection Factory" />
      <item value="Redis Connection Factory" />
      <item value="jedis" />
      <item value="Digit Tens" />
      <item value="Digit Ones" />
      <item value="Filter Output Stream" />
      <item value="Safe Encoder" />
      <item value="multi" />
      <item value="Jedis Data Exception" />
      <item value="has Pipelined Response" />
      <item value="pipeline" />
      <item value="check Is In Multi Or Pipeline" />
      <item value="get Status Code Reply" />
      <item value="singleton" />
      <item value="Tuple" />
      <item value="initialization" />
      <item value="redis Data Base" />
      <item value="Component" />
      <item value="Lettuce" />
      <item value="Default Jedis Socket Factory" />
      <item value="Advanced Binary Jedis Commands" />
      <item value="Binary Jedis" />
      <item value="get Date Cell Value" />
      <item value="get Cell Value By Cell" />
      <item value="String Builder" />
      <item value="get Connection Attributes As Properties" />
      <item value="Deflater" />
      <item value="rollback On" />
      <item value="is Cglib Proxy Class Name" />
      <item value="Reflective Method Invocation" />
      <item value="Data too long for column 'AIR_DURN' at row 2" />
      <item value="Dynamic Easy Excel Listener" />
      <item value="Import Excel" />
      <item value="get Excel Content" />
      <item value="Data truncation: Data too long for column 'AIR_DURN' at row 2" />
      <item value="AIR DURN" />
      <item value="directory" />
      <item value="director目录" />
      <item value="director" />
      <item value="Portal Controller" />
      <item value="get File Name" />
      <item value="parameter Map" />
      <item value="contains" />
      <item value="form Data Json" />
      <item value="param Key" />
      <item value="starts With" />
      <item value="curr" />
      <item value="2 All files are up-to-date" />
      <item value="model" />
      <item value="JSON" />
      <item value="to JSON String" />
      <item value="receive Map" />
      <item value="risk Status Limit Report" />
      <item value="get Session" />
      <item value="boolean" />
      <item value="function List" />
      <item value="sys Function Manager" />
      <item value="go Port" />
      <item value="suvering System Data Manager" />
      <item value="Servlet Request" />
      <item value="rhf" />
      <item value="get Logon Name" />
      <item value="add Attribute" />
      <item value="Model Attribute" />
      <item value="n" />
      <item value="里面获取用户名的信息" />
      <item value="uuser" />
      <item value="Mock Http Handler" />
      <item value="select Report Examine" />
      <item value="risk Assessment" />
      <item value="ajaxsearch" />
      <item value="select Id" />
      <item value="inner Examine Form" />
      <item value="class" />
      <item value="正在停止服务器实例" />
      <item value="通过关闭端口接收到有效的关闭命令" />
      <item value="Web Application Context" />
      <item value="go Export Pages" />
      <item value="page Type" />
      <item value="Page Type" />
      <item value="RISK WARNING REPORT" />
      <item value="RISK ABNORMAL EVENT REPORT" />
      <item value="RISK STATUS LIMIT REPORT" />
      <item value="risk Status" />
      <item value="abnormal Even Examine" />
      <item value="enable Start Project Examine" />
      <item value="点击确定导出按钮" />
      <item value="预警报告" />
      <item value="resolve Input Dom" />
      <item value="export Report" />
      <item value="click" />
      <item value="_url" />
      <item value="Current Navtab" />
      <item value="this" />
      <item value="data" />
      <item value="navtab" />
      <item value="确认导出报告" />
      <item value="执行操作" />
      <item value="获得原本页面的代码" />
      <item value="构建新网页" />
      <item value="new str" />
      <item value="body" />
      <item value="inner HTML" />
      <item value="将网页还原" />
      <item value="The {@link Calendar} instance used for calculating the date-time fields and the instant of time. This field is used for both formatting and parsing. &lt;p&gt;Subclasses should initialize this field to a {@link Calendar} appropriate for the {@link Locale} associated with this &lt;code&gt;DateFormat&lt;code&gt;. @serial" />
      <item value="Date Format Symbols" />
      <item value="Loaded classes are up to date. Nothing to reload." />
      <item value="model Name Map" />
      <item value="repair Scheme" />
      <item value="机组信息" />
      <item value="air Conditioner Warning Display" />
      <item value="create User Name" />
      <item value="list" />
      <item value="set Projection" />
      <item value="page" />
      <item value="parse Date Filter" />
      <item value="空调系统" />
      <item value="model Level" />
      <item value="Artifact nuaa_sys:war exploded: Deploy took 24,279 milliseconds" />
      <item value="exec" />
      <item value="parser" />
      <item value="Cookie" />
      <item value="log Invalid Header" />
      <item value="apache" />
      <item value="将忽略该cookie" />
      <item value="收到包含无效cookie的cookie头" />
      <item value="1662022126" />
      <item value="transaction" />
      <item value="My SQL 5 Dialect" />
      <item value="Hibernate" />
      <item value="model Version" />
      <item value="model Importance" />
      <item value="display" />
      <item value="random" />
      <item value="risk Warning Dispatcher Service" />
      <item value="warning" />
      <item value="width" />
      <item value="style" />
      <item value="textarea" />
      <item value="repeat Random" />
      <item value="get Row Id" />
      <item value="set Row Id" />
      <item value="display Vo" />
      <item value="DISPLAY MAPPING" />
      <item value="data Size" />
      <item value="Override" />
      <item value="页面显示" />
      <item value="persistence" />
      <item value="column Resolver Map" />
      <item value="export Source Data List" />
      <item value="Export History Diff Data" />
      <item value="get Field Name List" />
      <item value="result Vo" />
      <item value="field Name" />
      <item value="handle Type" />
      <item value="HAND MAPPING" />
      <item value="get Sys Id" />
      <item value="data Handle Vo" />
      <item value="sys Id" />
      <item value="Async Handler Direct Return" />
      <item value="handle Data" />
      <item value="to List" />
      <item value="Collectors" />
      <item value="multiple Thread" />
      <item value="njzjdbc Handle Data Record Manager" />
      <item value="Spring Util" />
      <item value="grouping By" />
      <item value="java" />
      <item value="get Single Column Row Mapper" />
      <item value="base Path" />
      <item value="Incorrect column count: expected 1, actual 7" />
      <item value="record Data List" />
      <item value="expected 1, actual 7" />
      <item value="file Helper" />
      <item value="download File" />
      <item value="octet-stream" />
      <item value="attachement Ins" />
      <item value="get File Path" />
      <item value="get Attachment Name" />
      <item value="export Data To File" />
      <item value="Njzjdbc Handle Data Record" />
      <item value="niminui" />
      <item value="Data Handle Dispatcher Service" />
      <item value="Transaction Factory Initiator" />
      <item value="Thread" />
      <item value="create New File" />
      <item value="get Boolean Attributes" />
      <item value="is Invalid" />
      <item value="export File" />
      <item value="The maximum length of cell contents (text) is 32767 characters" />
      <item value="bootstrap" />
      <item value="apache-tomca" />
      <item value="socket" />
      <item value=": class net.sf.cglib.core.DebuggingClassWriter has interface org.objectweb.asm.ClassVisitor as super class" />
      <item value="java.lang.IncompatibleClassChangeError: class net.sf.cglib.core.DebuggingClassWriter has interface org.objectweb.asm.ClassVisitor as super class" />
      <item value="ehcache" />
      <item value="A visitor to visit a Java class. The methods of this class must be called in the following order: {@code visit} [ {@code visitSource} ] [ {@code visitModule} ][ {@code visitNestHost} ][ {@code visitPermittedSubclass} ][ {@code visitOuterClass} ] ( {@code visitAnnotation} | {@code visitTypeAnnotation} | {@code visitAttribute} ) ( {@code visitNestMember} | {@code visitInnerClass} | {@code visitRecordComponent} | {@code visitField} | {@code visitMethod} ) {@code visitEnd}." />
      <item value="Class Visitor" />
      <item value="Parallel Sorter" />
      <item value="register Write Handler" />
      <item value="column Map" />
      <item value="Column Of Data" />
      <item value="Column Resolver Data" />
      <item value="column Name" />
      <item value="column Values" />
      <item value="Handle Result Vo" />
      <item value="get Original List" />
      <item value="get Date Time" />
      <item value="Date Util" />
      <item value="Diff History Data Controller" />
      <item value="jdbc Template" />
      <item value="export Name" />
      <item value="Data Handle Export Name Utils" />
      <item value="HANDLE DISPATCHER LOGGER" />
      <item value="Data Handle Service" />
      <item value="Export Data Utils" />
      <item value="catch" />
      <item value="Data Handle Vo" />
      <item value="get Data Handle Type" />
      <item value="Data Handle Type" />
      <item value="dispatcher Service" />
      <item value="missing Value Vo" />
      <item value="set Current List" />
      <item value="column Resolver Data" />
      <item value="customconfigurationquery" />
      <item value="select Fields" />
      <item value="get Select Fields" />
      <item value="field Name Array" />
      <item value="export File Name" />
      <item value="column Resolver Datum" />
      <item value="com" />
      <item value="qq" />
      <item value="set Original List" />
      <item value="column Of Data List" />
      <item value="Arrays" />
      <item value="file Path" />
      <item value="field Name List" />
      <item value="导出对比数据相关" />
      <item value="Longest Match Column Width Style Strategy" />
      <item value="Java" />
      <item value="EXPORT HISTORY DIFF ROOT PATH" />
      <item value="mkdir" />
      <item value="Naming Policy" />
      <item value="No Class Def Found Error" />
      <item value="file Name" />
      <item value="数据对比" />
      <item value="main" />
      <item value="type" />
      <item value="Dynamic Easy Excel Import Utils" />
      <item value="Export History Data" />
      <item value="字段名称" />
      <item value="选项的" />
      <item value="handle" />
      <item value="Abnormal Value Service" />
      <item value="data Handle Type" />
      <item value="min" />
      <item value="2022915 15:56" />
      <item value="result Column Data" />
      <item value="compare Beyond To Limit" />
      <item value="retrieving" />
      <item value="get Icon Width" />
      <item value="paint Icon" />
      <item value="get Registry" />
      <item value="Locate Registry" />
      <item value="remote Method 2" />
      <item value="Remote Exception" />
      <item value="Not Bound Exception" />
      <item value="args" />
      <item value="throws" />
      <item value="9888" />
      <item value="Remote Method Impl" />
      <item value="Locale" />
      <item value="Connection refused to host: 192.168.131.1; nested exception is:" />
      <item value="TCP Endpoint" />
      <item value="Connection refused: connect" />
      <item value="illegal remote method encountered:" />
      <item value="Exception in thread &quot;main&quot; java.rmi.server.ExportException: remote object implements illegal remote interface; nested exception is:" />
      <item value="Binds the specified &lt;code&gt;name&lt;code&gt; to a remote object. @param name a name in URL format (without the scheme component) @param obj a reference for the remote object (usually a stub) @exception AlreadyBoundException if name is already bound @exception MalformedURLException if the name is not an appropriately formatted URL @exception RemoteException if registry could not be contacted @exception AccessException if this operation is not permitted (if originating from a non-local host, for example) @since JDK1.1" />
      <item value="Rebinds the specified name to a new remote object. Any existing binding for the name is replaced. @param name a name in URL format (without the scheme component) @param obj new remote object to associate with the name @exception MalformedURLException if the name is not an appropriately formatted URL @exception RemoteException if registry could not be contacted @exception AccessException if this operation is not permitted (if originating from a non-local host, for example) @since JDK1.1" />
      <item value="illegal remote method encountered: public abstract java.lang.String com.xqh.ja" />
      <item value="remote object implements illegal remote interface; nested exception is:" />
      <item value="Malformed URL Exception" />
      <item value="is Opaque" />
      <item value="URI Syntax Exception" />
      <item value="rebind" />
      <item value="Already Bound Exception" />
      <item value="Xqh Remote Method" />
      <item value="Used for exporting a remote object with JRMP and obtaining a stub that communicates to the remote object. Stubs are either generated at runtime using dynamic proxy objects, or they are generated statically at build time, typically using the {@code rmic} tool. &lt;p&gt;&lt;strong&gt;Deprecated: Static Stubs.&lt;strong&gt; &lt;em&gt;Support for statically generated stubs is deprecated. This includes the API in this class that requires the use of static stubs, as well as the runtime support for loading static stubs. Generating stubs dynamically is preferred, using one of the five non-deprecated ways of exporting objects as listed below. Do not run {@code rmic} to generate static stub classes. It is unnecessary, and it is also deprecated.&lt;em&gt; &lt;p&gt;There are six ways to export remote objects: &lt;ol&gt; &lt;li&gt;Subclassing {@code UnicastRemoteObject} and calling the {@link UnicastRemoteObject()} constructor. &lt;li&gt;Subclassing {@code UnicastRemoteObject} and calling the {@link UnicastRemoteObject(int) UnicastRemoteObject(port)} constructor. &lt;li&gt;Subclassing {@code UnicastRemoteObject} and calling the {@link UnicastRemoteObject(int, RMIClientSocketFactory, RMIServerSocketFactory) UnicastRemoteObject(port, csf, ssf)} constructor. &lt;li&gt;Calling the {@link exportObject(Remote) exportObject(Remote)} method. &lt;strong&gt;Deprecated.&lt;strong&gt; &lt;li&gt;Calling the {@link exportObject(Remote, int) exportObject(Remote, port)} method. &lt;li&gt;Calling the {@link exportObject(Remote, int, RMIClientSocketFactory, RMIServerSocketFactory) exportObject(Remote, port, csf, ssf)} method. &lt;ol&gt; &lt;p&gt;The fourth technique, {@link exportObject(Remote)}, always uses statically generated stubs and is deprecated. &lt;p&gt;The other five techniques all use the following approach: if the {@code java.rmi.server.ignoreStubClasses} property is {@code true} (case insensitive) or if a static stub cannot be found, stubs are generated dynamically using {@link java.lang.reflect.Proxy Proxy} objects. Otherwise, static stubs are used. &lt;p&gt;The default value of the {@code java.rmi.server.ignoreStubClasses} property is {@code false}. &lt;p&gt;Statically generated stubs are typically pregenerated from the remote object's class using the {@code rmic} tool. A static stub is loaded and an instance of that stub class is constructed as described below. &lt;ul&gt; &lt;li&gt;A &quot;root class&quot; is determined as follows: if the remote object's class directly implements an interface that extends {@link Remote}, then the remote object's class is the root class; otherwise, the root class is the most derived superclass of the remote object's class that directly implements an interface that extends {@code Remote}. &lt;li&gt;The name of the stub class to load is determined by concatenating the binary name of the root class with the suffix {@code _Stub}. &lt;li&gt;The stub class is loaded by name using the class loader of the root class. The stub class must extend {@link RemoteStub} and must have a public constructor that has one parameter of type {@link RemoteRef}. &lt;li&gt;Finally, an instance of the stub class is constructed with a {@link RemoteRef}. &lt;li&gt;If the appropriate stub class could not be found, or if the stub class could not be loaded, or if a problem occurs creating the stub instance, a {@link StubNotFoundException} is thrown. &lt;ul&gt; &lt;p&gt;Stubs are dynamically generated by constructing an instance of a {@link java.lang.reflect.Proxy Proxy} with the following characteristics: &lt;ul&gt; &lt;li&gt;The proxy's class is defined by the class loader of the remote object's class. &lt;li&gt;The proxy implements all the remote interfaces implemented by the remote object's class. &lt;li&gt;The proxy's invocation handler is a {@link RemoteObjectInvocationHandler} instance constructed with a {@link RemoteRef}. &lt;li&gt;If the proxy could not be created, a {@link StubNotFoundException} will be thrown. &lt;ul&gt; @implNote Depending upon which constructor or static method is used for exporting an object, {@link RMISocketFactory} may be used for creating sockets. By default, server sockets created by {@link RMISocketFactory} listen on all network interfaces. See the {@link RMISocketFactory} class and the section &lt;a href=&quot;{@docRoot}..platformrmispecrmi-server29.html&quot;&gt;RMI Socket Factories&lt;a&gt; in the &lt;a href=&quot;{@docRoot}..platformrmispecrmiTOC.html&quot;&gt;Java RMI Specification&lt;a&gt;. @author Ann Wollrath @author Peter Jones @since JDK1.1" />
      <item value="Unicast Remote Object" />
      <item value="Live Ref" />
      <item value="export Object" />
      <item value="Ann Wollrath" />
      <item value="Activatable" />
      <item value="The &lt;code&gt;Remote&lt;code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine. Any object that is a remote object must directly or indirectly implement this interface. Only those methods specified in a &quot;remote interface&quot;, an interface that extends &lt;code&gt;java.rmi.Remote&lt;code&gt; are available remotely. &lt;p&gt;Implementation classes can implement any number of remote interfaces and can extend other remote implementation classes. RMI provides some convenience classes that remote object implementations can extend which facilitate remote object creation. These classes are &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;code&gt;. &lt;p&gt;For complete details on RMI, see the &lt;a href=......platformrmispecrmiTOC.html&gt;RMI Specification&lt;a&gt; which describes the RMI API and system." />
      <item value="Auto fetch: finished" />
      <item value="Generation" />
      <item value="Count Down Latch" />
      <item value="Cyclic Barrier" />
      <item value="远程方法调用" />
      <item value="Invocation" />
      <item value="import Excel Data To Data Base" />
      <item value="set Sys Id" />
      <item value="reloaded" />
      <item value="Read in a &quot;logical line&quot; from an InputStreamReader, skip all comment and blank lines and filter out those leading whitespace characters (\u0020, \u0009 and \u000c) from the beginning of a &quot;natural line&quot;. Method returns the char length of the &quot;logical line&quot; and stores the line in &quot;lineBuf&quot;." />
      <item value="readonly" />
      <item value="input" />
      <item value="get Flight" />
      <item value="flight" />
      <item value="copy Final List" />
      <item value="Executor Service" />
      <item value="用于存储数据" />
      <item value="定义数据包" />
      <item value="Adds a set of parameters to this &lt;code&gt;PreparedStatement&lt;code&gt; object's batch of commands. @exception SQLException if a database access error occurs or this method is called on a closed &lt;code&gt;PreparedStatement&lt;code&gt; @see StatementaddBatch @since 1.2" />
      <item value="get Host Address" />
      <item value="get Address" />
      <item value="root 1234" />
      <item value="user Name" />
      <item value="receive Thread Pool" />
      <item value="Link List" />
      <item value="format" />
      <item value="format Date" />
      <item value="set Recordtime" />
      <item value="4000" />
      <item value="提交表单" />
      <item value="使页面处于加载状态" />
      <item value="close Current Tab" />
      <item value="Current Dialog" />
      <item value="blocking Verify Process Finish" />
      <item value="ajax Form" />
      <item value="disabled" />
      <item value="upload Excel File" />
      <item value="sys Id Input" />
      <item value="process Data" />
      <item value="result" />
      <item value="upload Slice File" />
      <item value="console" />
      <item value="access Token" />
      <item value="handler Finish Mapping" />
      <item value="重置文件组件" />
      <item value="reset File Component" />
      <item value="verify File Extension Name" />
      <item value="select File Object" />
      <item value="root Path" />
      <item value="one Key Import Index Id" />
      <item value="access Token Input" />
      <item value="reset Slice Handle Component" />
      <item value="set Timeout" />
      <item value="异常值处理选择的数据" />
      <item value="abnormal Handle" />
      <item value="search Title" />
      <item value="page Content" />
      <item value="跟前端状态做对比" />
      <item value="询问当前切片流程状态" />
      <item value="page Footer" />
      <item value="bjui" />
      <item value="hand Move Do Ajax Method" />
      <item value="hand Move Do Ajax" />
      <item value="get Root Path" />
      <item value="Request Method" />
      <item value="Simple Date Format" />
      <item value="Excel" />
      <item value="test Excel" />
      <item value="close" />
      <item value="One Key Data Base Service" />
      <item value="operate System Table" />
      <item value="Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the {@code finalize} method to dispose of system resources or to perform other cleanup. &lt;p&gt; The general contract of {@code finalize} is that it is invoked if and when the Java&amp;trade; virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The {@code finalize} method may take any action, including making this object available again to other threads; the usual purpose of {@code finalize}, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an inputoutput connection might perform explicit IO transactions to break the connection before the object is permanently discarded. &lt;p&gt; The {@code finalize} method of class {@code Object} performs no special action; it simply returns normally. Subclasses of {@code Object} may override this definition. &lt;p&gt; The Java programming language does not guarantee which thread will invoke the {@code finalize} method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates. &lt;p&gt; After the {@code finalize} method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded. &lt;p&gt; The {@code finalize} method is never invoked more than once by a Java virtual machine for any given object. &lt;p&gt; Any exception thrown by the {@code finalize} method causes the finalization of this object to be halted, but is otherwise ignored." />
      <item value="Overrides finalize, the fd is closed by the Socket." />
      <item value="finalize" />
      <item value="ends With" />
      <item value="请选择Excel文件" />
      <item value="select File Change Method" />
      <item value="divide" />
      <item value="equest processing failed; nested exception is java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result" />
      <item value="Using DataSource" />
      <item value="column Size" />
      <item value="threshold" />
      <item value="get Common Pool Parallelism" />
      <item value="Parallel prefix (aka cumulate, scan) task classes are based loosely on Guy Blelloch's original algorithm (http:www.cs.cmu.edu~scandalalgscan.html): Keep dividing by two to threshold segment size, and then: Pass 1: Create tree of partial sums for each segment Pass 2: For each segment, cumulate with offset of left sibling This version improves performance within FJ framework mainly by allowing the second pass of ready left-hand sides to proceed even if some right-hand side first passes are still executing. It also combines first and second pass for leftmost segment, and skips the first pass for rightmost segment (whose result is not needed for second pass). It similarly manages to avoid requiring that users supply an identity basis for accumulations by tracking those segmentssubtasks for which the first existing element is used as base. Managing this relies on ORing some bits in the pendingCount for phasesstates: CUMULATE, SUMMED, and FINISHED. CUMULATE is the main phase bit. When false, segments compute only their sum. When true, they cumulate array elements. CUMULATE is set at root at beginning of second pass and then propagated down. But it may also be set earlier for subtrees with lo==0 (the left spine of tree). SUMMED is a one bit join count. For leafs, it is set when summed. For internal nodes, it becomes true when one child is summed. When the second child finishes summing, we then moves up tree to trigger the cumulate phase. FINISHED is also a one bit join count. For leafs, it is set when cumulated. For internal nodes, it becomes true when one child is cumulated. When the second child finishes cumulating, it then moves up tree, completing at the root. To better exploit locality and reduce overhead, the compute method loops starting with the current task, moving if possible to one of its subtasks rather than forking. As usual for this sort of utility, there are 4 versions, that are simple copypasteadapt variants of each other. (The double and int versions differ from long version soley by replacing &quot;long&quot; (with case-matching))." />
      <item value="compare And Set Pending Count" />
      <item value="ForkJoin tasks to perform Arrays.parallelPrefix operations." />
      <item value="Doug Lea" />
      <item value="Src is the source array that starts at index 0 Dest is the (possibly larger) array destination with a possible offset low is the index in dest to start sorting high is the end index in dest to end sorting off is the offset to generate corresponding low, high in src To be removed in a future release." />
      <item value="Comparable Tim Sort" />
      <item value="Tim Sort" />
      <item value="Josh Bloch" />
      <item value="This class implements the Dual-Pivot Quicksort algorithm by Vladimir Yaroslavskiy, Jon Bentley, and Josh Bloch. The algorithm offers O(n log(n)) performance on many data sets that cause other quicksorts to degrade to quadratic performance, and is typically faster than traditional (one-pivot) Quicksort implementations. All exposed methods are package-private, designed to be invoked from public methods (in class Arrays) after performing any necessary array bounds checks and expanding parameters into the required forms." />
      <item value="Dual Pivot Quicksort" />
      <item value="Sort five evenly spaced elements around (and including) the center element in the range. These elements will be used for pivot selection as described below. The choice for spacing these elements was empirically determined to work well on a wide variety of inputs." />
      <item value="Sort these elements using insertion sort" />
      <item value="Skip the longest ascending sequence." />
      <item value="seventh" />
      <item value="Even though a[great] equals to pivot, the assignment a[k] = pivot may be incorrect, if a[great] and pivot are floating-point zeros of different signs. Therefore in float and double sorting methods we have to use more accurate assignment a[k] = a[great]." />
      <item value="great" />
      <item value="Partitioning" />
      <item value="down Value" />
      <item value="combine" />
      <item value="To Double Function" />
      <item value="split" />
      <item value="query Data For Fields" />
      <item value="verify Effective" />
      <item value="temp Store List" />
      <item value="result Columns Data" />
      <item value="get Connection" />
      <item value="conn" />
      <item value="result Set" />
      <item value="columns" />
      <item value="column" />
      <item value="execute Sql" />
      <item value="default If Blank" />
      <item value="EMPTY" />
      <item value="data Normalization Value Vo" />
      <item value="as List" />
      <item value="execute Calculate Dispatcher" />
      <item value="calculate Result List" />
      <item value="System.out.println(2);" />
      <item value="Data Normalization Service" />
      <item value="RUNNING" />
      <item value="A handler for rejected tasks that silently discards the rejected task." />
      <item value="Discard Oldest Policy" />
      <item value="Discard Policy" />
      <item value="COUNT BITS" />
      <item value="run State Of" />
      <item value="ctl Of" />
      <item value="Bit field accessors that don't require unpacking ctl. These depend on the bit layout and on workerCount being never negative." />
      <item value="rs" />
      <item value="merge Process Data Thread Pool" />
      <item value="remove Shutdown Hook" />
      <item value="get Parent Bean Factory" />
      <item value="Hierarchical Bean Factory" />
      <item value="execute Data Base Thread Pool" />
      <item value="Execute" />
      <item value="Help GC" />
      <item value="limit" />
      <item value="http-nio-8699" />
      <item value="stylesheet" />
      <item value="codemirror" />
      <item value="forward Diff Nav Tab" />
      <item value="each" />
      <item value="json" />
      <item value="ajax Done" />
      <item value="缺失值补充" />
      <item value="信息提示" />
      <item value="跳转页面" />
      <item value="forward Page Param" />
      <item value="异常值处理 跳转" />
      <item value="Hash Map" />
      <item value="处理成功" />
      <item value="get Handle Type" />
      <item value="forward" />
      <item value="MISSING VALUE" />
      <item value="ABNORMAL VALUE" />
      <item value="我的业务页面" />
      <item value="get Table Name" />
      <item value="diff" />
      <item value="缺失值处理 跳转页面" />
      <item value="forward Diff Call Back" />
      <item value="right Threshold" />
      <item value="diff Context" />
      <item value="bordered" />
      <item value="option" />
      <item value="value" />
      <item value="initialization Event" />
      <item value="abnormal" />
      <item value="if Changed" />
      <item value="规范输入数值" />
      <item value="阈值" />
      <item value="number" />
      <item value="placeholder" />
      <item value="integer" />
      <item value="i Check" />
      <item value="tbody" />
      <item value="table Exist" />
      <item value="处理方式" />
      <item value="超越极限则为异常" />
      <item value="record Error Index" />
      <item value="compare Value" />
      <item value="This interface imposes a total ordering on the objects of each class that implements it. This ordering is referred to as the class's &lt;i&gt;natural ordering&lt;i&gt;, and the class's &lt;tt&gt;compareTo&lt;tt&gt; method is referred to as its &lt;i&gt;natural comparison method&lt;i&gt;.&lt;p&gt; Lists (and arrays) of objects that implement this interface can be sorted automatically by {@link Collectionssort(List) Collections.sort} (and {@link Arrayssort(Object[]) Arrays.sort}). Objects that implement this interface can be used as keys in a {@linkplain SortedMap sorted map} or as elements in a {@linkplain SortedSet sorted set}, without the need to specify a {@linkplain Comparator comparator}.&lt;p&gt; The natural ordering for a class &lt;tt&gt;C&lt;tt&gt; is said to be &lt;i&gt;consistent with equals&lt;i&gt; if and only if &lt;tt&gt;e1.compareTo(e2) == 0&lt;tt&gt; has the same boolean value as &lt;tt&gt;e1.equals(e2)&lt;tt&gt; for every &lt;tt&gt;e1&lt;tt&gt; and &lt;tt&gt;e2&lt;tt&gt; of class &lt;tt&gt;C&lt;tt&gt;. Note that &lt;tt&gt;null&lt;tt&gt; is not an instance of any class, and &lt;tt&gt;e.compareTo(null)&lt;tt&gt; should throw a &lt;tt&gt;NullPointerException&lt;tt&gt; even though &lt;tt&gt;e.equals(null)&lt;tt&gt; returns &lt;tt&gt;false&lt;tt&gt;.&lt;p&gt; It is strongly recommended (though not required) that natural orderings be consistent with equals. This is so because sorted sets (and sorted maps) without explicit comparators behave &quot;strangely&quot; when they are used with elements (or keys) whose natural ordering is inconsistent with equals. In particular, such a sorted set (or sorted map) violates the general contract for set (or map), which is defined in terms of the &lt;tt&gt;equals&lt;tt&gt; method.&lt;p&gt; For example, if one adds two keys &lt;tt&gt;a&lt;tt&gt; and &lt;tt&gt;b&lt;tt&gt; such that {@code (!a.equals(b) &amp;&amp; a.compareTo(b) == 0)} to a sorted set that does not use an explicit comparator, the second &lt;tt&gt;add&lt;tt&gt; operation returns false (and the size of the sorted set does not increase) because &lt;tt&gt;a&lt;tt&gt; and &lt;tt&gt;b&lt;tt&gt; are equivalent from the sorted set's perspective.&lt;p&gt; Virtually all Java core classes that implement &lt;tt&gt;Comparable&lt;tt&gt; have natural orderings that are consistent with equals. One exception is &lt;tt&gt;java.math.BigDecimal&lt;tt&gt;, whose natural ordering equates &lt;tt&gt;BigDecimal&lt;tt&gt; objects with equal values and different precisions (such as 4.0 and 4.00).&lt;p&gt; For the mathematically inclined, the &lt;i&gt;relation&lt;i&gt; that defines the natural ordering on a given class C is:&lt;pre&gt; {(x, y) such that x.compareTo(y) &amp;lt;= 0}. &lt;pre&gt; The &lt;i&gt;quotient&lt;i&gt; for this total order is: &lt;pre&gt; {(x, y) such that x.compareTo(y) == 0}. &lt;pre&gt; It follows immediately from the contract for &lt;tt&gt;compareTo&lt;tt&gt; that the quotient is an &lt;i&gt;equivalence relation&lt;i&gt; on &lt;tt&gt;C&lt;tt&gt;, and that the natural ordering is a &lt;i&gt;total order&lt;i&gt; on &lt;tt&gt;C&lt;tt&gt;. When we say that a class's natural ordering is &lt;i&gt;consistent with equals&lt;i&gt;, we mean that the quotient for the natural ordering is the equivalence relation defined by the class's {@link Objectequals(Object) equals(Object)} method:&lt;pre&gt; {(x, y) such that x.equals(y)}. &lt;pre&gt;&lt;p&gt; This interface is a member of the &lt;a href=&quot;{@docRoot}..technotesguidescollectionsindex.html&quot;&gt; Java Collections Framework&lt;a&gt;. @param &lt;T&gt; the type of objects that this object may be compared to" />
      <item value="Compares two strings lexicographically. The comparison is based on the Unicode value of each character in the strings. The character sequence represented by this {@code String} object is compared lexicographically to the character sequence represented by the argument string. The result is a negative integer if this {@code String} object lexicographically precedes the argument string. The result is a positive integer if this {@code String} object lexicographically follows the argument string. The result is zero if the strings are equal; {@code compareTo} returns {@code 0} exactly when the {@link equals(Object)} method would return {@code true}. &lt;p&gt; This is the definition of lexicographic ordering. If two strings are different, then either they have different characters at some index that is a valid index for both strings, or their lengths are different, or both. If they have different characters at one or more index positions, let &lt;i&gt;k&lt;i&gt; be the smallest such index; then the string whose character at position &lt;i&gt;k&lt;i&gt; has the smaller value, as determined by using the &amp;lt; operator, lexicographically precedes the other string. In this case, {@code compareTo} returns the difference of the two character values at position {@code k} in the two string -- that is, the value: &lt;blockquote&gt;&lt;pre&gt; this.charAt(k)-anotherString.charAt(k) &lt;pre&gt;&lt;blockquote&gt; If there is no index position at which they differ, then the shorter string lexicographically precedes the longer string. In this case, {@code compareTo} returns the difference of the lengths of the strings -- that is, the value: &lt;blockquote&gt;&lt;pre&gt; this.length()-anotherString.length() &lt;pre&gt;&lt;blockquote&gt;" />
      <item value="Helper class that contains algorithms taken from JDK that additionally tracks the permutation that's created thorough the process" />
      <item value="Merge sort from Oracle JDK 6" />
      <item value="left Threshold" />
      <item value="compare Result" />
      <item value="compare To" />
      <item value="待确认值" />
      <item value="本次比较阈值" />
      <item value="is Up" />
      <item value="Math" />
      <item value="double To Raw Long Bits" />
      <item value="column Value" />
      <item value="start Value" />
      <item value="end Index" />
      <item value="end Value" />
      <item value="false" />
      <item value="border Operate" />
      <item value="process End Flag" />
      <item value="最可能为总容量的" />
      <item value="出问题的概率" />
      <item value="column Of Data" />
      <item value="column Value Error Index" />
      <item value="Calculate" />
      <item value="System" />
      <item value="objects List" />
      <item value="abc" />
      <item value="数据标准化处理" />
      <item value="get Left Threshold" />
      <item value="else" />
      <item value="Exception" />
      <item value="get Message" />
      <item value="data Handle Abnormal Vo" />
      <item value="print Stack Trace" />
      <item value="DATA NORMALIZATION" />
      <item value="数据表名称" />
      <item value="TIME DELAY LENGTH" />
      <item value="Application Context" />
      <item value="set Application Context" />
      <item value="bean Name" />
      <item value="load Current Tag Plugin" />
      <item value="field Name Position" />
      <item value="original List" />
      <item value="leet Code Reduce Method" />
      <item value="current List" />
      <item value="javascript" />
      <item value="append" />
      <item value="none" />
      <item value="load Frame Plugins" />
      <item value="load Plugin Counter" />
      <item value="interval Load Plugin" />
      <item value="currrent List" />
      <item value="diff Vo" />
      <item value="ready" />
      <item value="Xml Bean Definition Reader" />
      <item value="数据处理方法" />
      <item value="结果" />
      <item value="POST" />
      <item value="message" />
      <item value="Connection timed out: connect" />
      <item value="header Field List" />
      <item value="import Excel Data List" />
      <item value="bean Dest" />
      <item value="Finalize" />
      <item value="Split Relation Config" />
      <item value="SPLIT TABLE FIELD THRESHOLD" />
      <item value="batch Execute Split Insert Data Base Values" />
      <item value="close Component" />
      <item value="get Key" />
      <item value="table Fields Map" />
      <item value="table Fields" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="8824" />
        <entry key="ENGLISH" value="8825" />
        <entry key="ALBANIAN" value="3" />
        <entry key="ARABIC" value="3" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="3" />
        <entry key="AFRIKAANS" value="3" />
        <entry key="DANISH" value="19" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="2" />
        <entry key="FRISIAN" value="4" />
        <entry key="HAITIAN_CREOLE" value="2" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="2" />
        <entry key="LATIN" value="22" />
        <entry key="LATVIAN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="4" />
        <entry key="ROMANIAN" value="6" />
        <entry key="MALAGASY" value="4" />
        <entry key="MALTESE" value="4" />
        <entry key="MARATHI" value="1" />
        <entry key="MAORI" value="1" />
        <entry key="BENGALI" value="5" />
        <entry key="HMONG" value="2" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="9" />
        <entry key="PORTUGUESE" value="19" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="ESPERANTO" value="1" />
        <entry key="SLOVAK" value="1" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SWAHILI" value="1" />
        <entry key="SCOTS_GAELIC" value="2" />
        <entry key="WELSH" value="2" />
        <entry key="UZBEK" value="2" />
        <entry key="SPANISH" value="14" />
        <entry key="HAWAIIAN" value="2" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="11" />
        <entry key="HINDI" value="15" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="1" />
        <entry key="YORUBA" value="1" />
        <entry key="VIETNAMESE" value="6" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1665988984222" />
  </component>
  <component name="Settings">
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1672471446119" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="CHINESE" />
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
    <option name="translator" value="MICROSOFT" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <histories>
      <item value="Runnable" />
      <item value="将任务和时间封装在一起组成一个具有延时性的对象" />
      <item value="只不过延时时间是0纳秒" />
      <item value="Schedule Future Task" />
      <item value="Thread factory capturing access control context and class loader" />
      <item value="Completable Statistics Functions" />
      <item value="warning" />
      <item value="The actual task to be re-enqueued by reExecutePeriodic" />
      <item value="Josh Bloch" />
      <item value="nanos" />
      <item value="false" />
      <item value="return" />
      <item value="Eligible to terminate" />
      <item value="replacement not needed" />
      <item value="Same as prestartCoreThread except arranges that at least one thread is started even if corePoolSize is 0." />
      <item value="If pool is stopping, ensure thread is interrupted; if not, ensure thread is not interrupted. This requires a recheck in second case to deal with shutdownNow race while clearing interrupt" />
      <item value="if the worker died due to user exception" />
      <item value="If fewer than corePoolSize" />
      <item value="than" />
      <item value="fewer" />
      <item value="1. If fewer than corePoolSize threads are running, try to start a new thread with the given command as its first task. The call to addWorker atomically checks runState and workerCount, and so prevents false alarms that would add threads when it shouldn't, by returning false. 2. If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method. So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none. 3. If we cannot queue task, then we try to add a new thread. If it fails, we know we are shut down or saturated and so reject the task." />
      <item value="This constructor will eventually be called" />
      <item value="最终都会调用这个构造器" />
      <item value="线程池状态及其转换" />
      <item value="https" />
      <item value="kdocs" />
      <item value="cs HJHP Imdw Z 7" />
      <item value="aliyuncs" />
      <item value="effect" />
      <item value="1. If fewer than corePoolSize threads are running, try to start a new thread with the given command as its first task. The call to addWorker atomically checks runState and workerCount, and so prevents false alarms that would add threads when it shouldn't, by returning false." />
      <item value="checking" />
      <item value="2. If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method. So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none. 3. If we cannot queue task, then we try to add a new thread. If it fails, we know we are shut down or saturated and so reject the task." />
      <item value="2. If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method. So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none." />
      <item value="existing" />
      <item value="Proceed in 3 steps: 1. If fewer than corePoolSize threads are running, try to start a new thread with the given command as its first task. The call to addWorker atomically checks runState and workerCount, and so prevents false alarms that would add threads when it shouldn't, by returning false. 2. If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method. So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none. 3. If we cannot queue task, then we try to add a new thread. If it fails, we know we are shut down or saturated and so reject the task." />
      <item value="command" />
      <item value="add Worker" />
      <item value="Thread Pool Executor" />
      <item value="Delegates main run loop to outer runWorker" />
      <item value="author" />
      <item value="周期执行1671353652228" />
      <item value="执行完方法后才计算下次运行时间" />
      <item value="Delayed Task" />
      <item value="Delay Queue" />
      <item value="public" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="42" />
        <entry key="ENGLISH" value="42" />
      </map>
    </option>
  </component>
</application>
<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <histories>
      <item value="the Amount This Payment" />
      <item value="Quartz Scheduler" />
      <item value="Ruoyi Scheduler DESKTOP" />
      <item value="Scheduler" />
      <item value="Initializing" />
      <item value="log" />
      <item value="Connection" />
      <item value="INFO" />
      <item value="dispatcher Servlet" />
      <item value="Dispatcher Servlet" />
      <item value="The JVM interface for the method handles package is all here. This is an interface internal and private to an implementation of JSR 292. &lt;em&gt;This class is not part of the JSR 292 standard.&lt;em&gt;" />
      <item value="Method Handle Natives" />
      <item value="ACC VARARGS" />
      <item value="ACC VOLATILE" />
      <item value="ACC SYNCHRONIZED" />
      <item value="Access modifier flags." />
      <item value="Tell the JVM that we need to change the target of a CallSite." />
      <item value="A {@code VolatileCallSite} is a {@link CallSite} whose target acts like a volatile variable. An {@code invokedynamic} instruction linked to a {@code VolatileCallSite} sees updates to its call site target immediately, even if the update occurs in another thread. There may be a performance penalty for such tight coupling between threads. &lt;p&gt; Unlike {@code MutableCallSite}, there is no {@linkplain MutableCallSitesyncAll syncAll operation} on volatile call sites, since every write to a volatile variable is implicitly synchronized with reader threads. &lt;p&gt; In other respects, a {@code VolatileCallSite} is interchangeable with {@code MutableCallSite}. @see MutableCallSite" />
      <item value="payment Tick Row Id" />
      <item value="get" />
      <item value="store" />
      <item value="payment" />
      <item value="list" />
      <item value="get Store Payment Data List" />
      <item value="volatile Call Site" />
      <item value="success" />
      <item value="STATIC INITIALIZER NAME" />
      <item value="CONSTRUCTOR NAME" />
      <item value="Per JVMS 6.5, desc. of invokespecial instruction: If the method is in a superclass of the LC, and if our original search was above LC.super, repeat the search (symbolic lookup) from LC.super and continue with the direct superclass of that class, and so forth, until a match is found or no further superclasses exist. FIXME: MemberName.resolve should handle this instead." />
      <item value="find Virtual" />
      <item value="aspect Void Method Inject" />
      <item value="amount This Payment" />
      <item value="the Amount This" />
      <item value="Runnable Adapter" />
      <item value="改变结算金额数值" />
      <item value="transport" />
      <item value="HV 000001" />
      <item value="clinit" />
      <item value="Version" />
      <item value="Inject" />
      <item value="is Empty" />
      <item value="condition Param Row Ids" />
      <item value="Collection Utils" />
      <item value="Ajax Result" />
      <item value="Lazy Initialization Exclude Filter" />
      <item value="Process Engine String Pool" />
      <item value="Process Condition Call" />
      <item value="Process Store Call" />
      <item value="Status Process Engine" />
      <item value="Store" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1750" />
        <entry key="ENGLISH" value="1751" />
        <entry key="ALBANIAN" value="1" />
        <entry key="ARABIC" value="2" />
        <entry key="ICELANDIC" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MAORI" value="1" />
        <entry key="HMONG" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SPANISH" value="1" />
        <entry key="HAWAIIAN" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="YORUBA" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1658061575411" />
  </component>
</application>
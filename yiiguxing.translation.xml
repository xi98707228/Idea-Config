<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="342" />
    <histories>
      <item value="Linked Blocking Queue" />
      <item value="new Fixed Thread Pool" />
      <item value="await" />
      <item value="not Empty" />
      <item value="Retrieves and removes the head of this queue, waiting if necessary until an element becomes available. @return the head of this queue @throws InterruptedException if interrupted while waiting" />
      <item value="Completion Service" />
      <item value="Delegating Completable Future" />
      <item value="Async Listenable Task Executor" />
      <item value="Thread Pool Task Executor" />
      <item value="instrument Revenue Count" />
      <item value="compute Cost Order Revenue Count Thread Future" />
      <item value="instrument Revenue Count Atomic Reference" />
      <item value="cost Order Revenue Count" />
      <item value="TUPLE 2_BIFUNCTION" />
      <item value="Flux" />
      <item value="combine Latest" />
      <item value="Disposable" />
      <item value="Scalar Callable" />
      <item value="submit" />
      <item value="compute Revenue Count Result" />
      <item value="差价相关" />
      <item value="statistics Projects" />
      <item value="report" />
      <item value="Runnable Future" />
      <item value="is Done" />
      <item value="trigger Time" />
      <item value="Call Site" />
      <item value="A {@code VolatileCallSite} is a {@link CallSite} whose target acts like a volatile variable. An {@code invokedynamic} instruction linked to a {@code VolatileCallSite} sees updates to its call site target immediately, even if the update occurs in another thread. There may be a performance penalty for such tight coupling between threads. &lt;p&gt; Unlike {@code MutableCallSite}, there is no {@linkplain MutableCallSitesyncAll syncAll operation} on volatile call sites, since every write to a volatile variable is implicitly synchronized with reader threads. &lt;p&gt; In other respects, a {@code VolatileCallSite} is interchangeable with {@code MutableCallSite}. @see MutableCallSite @author John Rose, JSR 292 EG" />
      <item value="Volatile Call Site" />
      <item value="compute Cost Order Revenue Count" />
      <item value="completed Future" />
      <item value="run Async" />
      <item value="complete Null" />
      <item value="Null-checks user executor argument, and translates uses of commonPool to asyncPool in case parallelism disabled." />
      <item value="screen Executor" />
      <item value="async Run Stage" />
      <item value="Executor" />
      <item value="Executor Service" />
      <item value="Bi Relay" />
      <item value="reject" />
      <item value="delayed Execute" />
      <item value="Scheduled Future" />
      <item value="Caller Runs Policy" />
      <item value="thread Pool Task Executor" />
      <item value="scheduled Executor Service" />
      <item value="Completable Future" />
      <item value="complete" />
      <item value="report Join" />
      <item value="Finance Statistics Expend Part" />
      <item value="statistics Expend Data List" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1039" />
        <entry key="ENGLISH" value="1040" />
        <entry key="ARABIC" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="FILIPINO" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="HMONG" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SPANISH" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="YORUBA" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656897881727" />
  </component>
</application>